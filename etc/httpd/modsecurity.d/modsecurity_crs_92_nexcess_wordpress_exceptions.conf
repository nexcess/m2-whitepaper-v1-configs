# Free Input Fields:
# Comments, Options, Posts - Both allow html input in various areas.
<LocationMatch /wp-comments-post.php|/wp-admin/(options.php|post.php|admin-ajax.php|nav-menus.php|themes.php)>
	SecRuleRemoveByTag 'OWASP_CRS/WEB_ATTACK/SQL_INJECTION'
	SecRuleRemoveByTag 'OWASP_CRS/WEB_ATTACK/XSS'
	SecRuleRemoveById 950120
</LocationMatch>

# When Opening up theme editor (Appearance --> Customize)
#SecRuleUpdateTargetByTag 'OWASP_CRS/WEB_ATTACK/SQL_INJECTION' !ARGS:customized
SecRule REQUEST_METHOD "^POST$" "chain,t:none,pass,nolog,id:'4092000'"
	SecRule REQUEST_URI "/" "ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:customized"

# While using the Theme Editor, prevents any rules tagged with "OWASP_CRS/WEB_ATTACK/" or 
# # "OWASP_CRS/PROTOCOL_VIOLATION/" from running against the 'newcontent' argument.
#
# 981300-981317 are tagged as 'OWASP_CRS/WEB_ATTACK/SQL_INJECTION', but still seem to get
# triggered for some reason, hence the explicit whitelist.
SecRule REQUEST_METHOD "^POST$" "chain,t:none,pass,nolog,id:'4092001'"
	SecRule REQUEST_URI "/wp-admin/(theme-editor.php|plugin-editor.php)" " \
	ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/;ARGS:newcontent, \
	ctl:ruleRemoveTargetByTag=OWASP_CRS/PROTOCOL_VIOLATION/;ARGS:newcontent, \
	ctl:ruleRemoveTargetById=981300-981317;REQUEST_BODY"

# 960024 950018 950019 950910 950911 981133 981134: some non-tagged WEB_ATTACK rules
# 950109 & 97338 get triggered on some other ARGS like 'file' and '_wp_http_referer
<LocationMatch /wp-admin/(theme-editor.php|plugin-editor.php)>
	SecRuleRemoveById 960024 950018 950019 950910 950911 981133 981134
	SecRuleRemoveById 950109
	SecRuleRemoveById 973338
	SecRuleRemoveById 950103
</LocationMatch>

# All the %'s trips Multiple URL Encoding detection
<LocationMatch /wp-admin/options-permalink.php>
	SecRuleRemoveById 950109
</LocationMatch>

# It's normal for the body of Wordpress login POST to look like this:
# log=tedward&pwd=password;&wp-submit=Log In&redirect_to=http://tedwardia.net/wp-admin/&testcookie=1
# Which is pretty much always going to trip this rule: http://blog.inliniac.net/2008/07/16/wordpress-version-26-modsecurity/#comments
# 950120 should actually catch if redirect_to is set to an off domain address anyways :)
SecRuleRemoveById 2003508

# Trackback will sometimes post an excerpt of the remote content.
SecRule REQUEST_METHOD "^POST$" "chain,t:none,pass,nolog,id:'4092002'"
    SecRule REQUEST_URI "/trackback" " \
    ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:excerpt, \
    ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:excerpt"

# Adding/Editing forms in Contact-Form-7
SecRule REQUEST_METHOD "^POST$" \
    "phase:1,\
    id:4092003,\
    t:none,\
    pass,\
    nolog,\
    chain"
        SecRule REQUEST_URI "/wp-admin/admin.php" "chain"
            SecRule ARGS:page "wpcf7" \
                "ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-additional-settings,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-additional-settings,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-additional-settings,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-form,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-form,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-form,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-mail-2-body,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-mail-2-body,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-mail-2-body,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-mail-2-sender,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-mail-2-sender,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-mail-2-sender,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-mail-additional-headers,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-mail-additional-headers,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-mail-additional-headers,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-mail-body,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-mail-body,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-mail-body,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-message-mail-sent-ok,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-message-mail-sent-ok,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-message-mail-sent-ok,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-message-quiz-answer-not-correct,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-message-quiz-answer-not-correct,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-message-quiz-answer-not-correct,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/SQL_INJECTION;ARGS:wpcf7-message-upload-file-type-invalid,\
                ctl:ruleRemoveTargetByTag=OWASP_CRS/WEB_ATTACK/XSS;ARGS:wpcf7-message-upload-file-type-invalid,\
                ctl:ruleRemoveTargetById=981300-981317;ARGS:wpcf7-message-upload-file-type-invalid"
