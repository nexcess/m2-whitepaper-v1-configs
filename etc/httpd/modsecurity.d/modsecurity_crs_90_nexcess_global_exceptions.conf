# allows missing or empty user agents
SecRuleRemoveById 960009
SecRuleRemoveById 960006

# allows missing or empty accept headers
SecRuleRemoveById 960015
SecRuleRemoveById 960021

# don't block outgoing data
SecRuleRemoveById 981200

# Only log in users error.log if the request is blocked. Gets quite noisy otherwise.
SecRuleRemoveById 981201
SecRuleRemoveById 981202
SecRuleRemoveById 981203
SecRuleRemoveById 981204
SecRuleRemoveById 981205

# Allows crawlers and bots to request a byte range beginning with 0
# "normal" browsers don't do this but cralers and bots love to
SecRuleRemoveById 958291

# Allow requests containing links to other domains
SecRuleRemoveById 950120

# allow iworx to get /watch-flush using an IP address with no Host set
SecRule REMOTE_ADDR "^127\.0\.0\.1$" "id:'4090000',phase:1,t:none,nolog,pass,ctl:ruleRemoveById=960017"

# Many cookies contain JSON data, which tends to trip these rules.
SecRuleUpdateTargetByid 959070 !REQUEST_COOKIES,!ARGS
SecRuleUpdateTargetById 981242 !REQUEST_COOKIES,!ARGS
SecRuleUpdateTargetById 981243 !REQUEST_COOKIES,!ARGS
SecRuleUpdateTargetById 981245 !REQUEST_COOKIES,!ARGS
SecRuleUpdateTargetById 981246 !REQUEST_COOKIES,!ARGS
SecRuleUpdateTargetById 981257 !REQUEST_COOKIES,!ARGS

# Allow repetitive (4 or more) non-word characters in ARGS
SecRuleRemoveById 960024
# Allow multiple use of meta-characters within a single parameter payload
SecRuleRemoveById 981172
SecRuleRemoveById 981173
# Allow cookies or args whose contents or name starts or ends with quotes. (Rule only intended to block probes)
SecRuleRemoveById 981318

# For various SQLi rules, modify the increase in anomaly_score to be identical to the increase in sql_injection_score. This makes it easier to remove the increase in anomaly_score from SQLi rules (by doing anomaly_score - sql_injection_score. See modsecurity_crs_49_inbound_blocking.conf). We can then have a completely separate threshold for the SQL Injection ruleset.
SecRuleUpdateActionById 981172 "setvar:tx.anomaly_score=-2"
SecRuleUpdateActionById 981173 "setvar:tx.anomaly_score=-2"
SecRuleUpdateActionById 981231 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981240 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981241 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981242 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981243 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981244 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981245 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981246 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981247 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981248 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981249 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981250 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981251 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981252 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981253 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981254 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981255 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981256 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981257 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981270 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981276 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981277 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 981317 "setvar:tx.anomaly_score=-2"
# These rules add to the sql_injection_score, but not to the anomaly score, so we have to do the opposite to even things out.
SecRuleUpdateActionById 981301 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981302 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981303 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981304 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981305 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981306 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981307 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981308 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981309 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981310 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981311 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981312 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981313 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981314 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981315 "setvar:tx.anomaly_score=+1"
SecRuleUpdateActionById 981316 "setvar:tx.anomaly_score=+1"

# Reduce serverity/disable some protocol violation rules
# 960912 - REQBODY_ERROR often is set to true when modsecurity's XML parser hits an error.
# 	(Wordpress pingback's in particular)
# 960914 - A little too strict on what is allowed in multipart/form-data bodies
# 960915 - Umatched boundaries - matches againts MULTIPART_UNMATCHED_BOUNDARY
SecRuleUpdateActionById 960912 "setvar:tx.anomaly_score=-1"
SecRuleUpdateActionById 960914 "setvar:tx.anomaly_score=-1"
SecRuleRemoveById 960915

# Allow IE 8 weirdness with eot fonts
<FilesMatch "\.eot$">
	SecRuleRemoveById 950001
	SecRuleRemoveById 959073
	SecRuleRemoveById 981257
	SecRuleRemoveById 973335
	SecRuleRemoveById 973334
	SecRuleRemoveById 981172
	SecRuleRemoveById 981173
	SecRuleRemoveById 981318
</FilesMatch>

# Allow requests with large number of arguments, long argument names, or large files.
SecRuleRemoveByTag 'OWASP_CRS/POLICY/SIZE_LIMIT'

# Outbound filtering rules aren't needed, as we have Response Body access disabled anyways.
SecRuleRemoveById 970002 970003 970004 970007 970008 970009 970010 970011 970012 970013 970014 970015 970016 970018 970021 970118 970901 970902 970903 970904 981000 981001 981003 981004 981005 981006 981007 981177 981178

# Useful rule, but can end up triggering on ' style '
SecRuleRemoveById 973338

# Multiple URL Encoding. Useful, but very high rate of false positives
SecRuleRemoveById 950109

# These are useful in some cases, but too many legitimate bots use weird
# headers that may not be in compliance with the HTTP RFC.
SecRuleRemoveById 960010
SecRuleRemoveById 960020

# Low performance rules
SecRuleRemoveById 973302
SecRuleRemoveById 973347

# Reduce Severity on Response Splitting Rules
# These rules are primarily intended for use on webservers
# acting as a proxy, which we do not currently do.
SecRuleUpdateActionById 950910 "setvar:tx.anomaly_score=-3"
SecRuleUpdateActionById 950911 "setvar:tx.anomaly_score=-3"
# Too many false positives on this one
SecRuleUpdateActionById 950018 "setvar:tx.anomaly_score=-3"

# Too many false positives on Command Injection rules
SecRuleUpdateActionById 950907 "setvar:tx.anomaly_score=-4"
SecRuleUpdateActionById 950006 "setvar:tx.anomaly_score=-4"

# Don't bother with LDAP injection ruleset
SecRuleRemoveByTag 'OWASP_CRS/WEB_ATTACK/LDAP_INJECTION'

# Remote File Inclusion rules useful, but have to many false positives
SecRuleUpdateActionById 950119 "setvar:tx.anomaly_score=-2"
SecRuleUpdateActionById 950120 "setvar:tx.anomaly_score=-2"
