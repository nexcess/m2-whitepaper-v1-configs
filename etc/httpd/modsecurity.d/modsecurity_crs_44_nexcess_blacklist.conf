# Block file uploads in magmi
SecRule REQUEST_METHOD "^POST$" \
    "msg:'Attempted magmi plugin upload. Ensure that magmi is restricted by password or IP before whitelisting this rule.',\
    severity:CRITICAL,\
    phase:request,\
    id:4044000,\
    t:none,\
    auditlog,\
    chain"
        SecRule REQUEST_URI "/web/plugin_upload.php" "chain"
            SecRule MULTIPART_NAME "plugin_package"

SecRule REQUEST_METHOD "^POST$" \
    "msg:'Attempted magmi release update. Ensure that magmi is restricted by password or IP before whitelisting this rule.',\
    severity:CRITICAL,\
    phase:request,\
    id:4044001,\
    t:none,\
    auditlog,\
    chain"
        SecRule REQUEST_URI "/web/magmi_upload.php" "chain"
            SecRule MULTIPART_NAME "magmi_package"

# Block shoplift exploit - vulnerability patched in SUPEE-5344 / SUPEE-5345
# More details at: http://blog.checkpoint.com/2015/04/20/analyzing-magento-vulnerability/
SecRule REQUEST_LINE "/cms_wysiwyg/" \
    "msg:'Attempted shoplift exploit.',\
    severity:CRITICAL,\
    phase:request,\
    id:4044002,\
    t:lowercase,\
    auditlog,\
    chain"
        SecRule ARGS:forwarded "1" "chain"
            SecRule ARGS_POST_NAMES "filter" "chain"
                SecRule ARGS_POST_NAMES "___directive" \
                    "setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"

# Log other requests to Magento backend where forwarded is set to 1
SecRule REQUEST_METHOD "POST" \
    "msg:'Internally forwarded Magento request.',\
    severity:NOTICE,\
    phase:request,\
    id:4044003,\
    t:none,\
    auditlog,\
    chain"
        SecRule ARGS_POST:forwarded "1"

# Blocks attempts to use FilesMan backdoor
SecRule REQUEST_METHOD "POST" \
    "msg:'Attemped use of FileMan backdoor',\
    severity:CRITICAL,\
    phase:request,\
    id:4044004,\
    t:none,\
    auditlog,\
    chain"
        SecRule ARGS_POST:charset "@pm UTF-8 Windows-1251 KOI8-U KOI8-R cp866" "chain"
            SecRule ARGS_POST:a "@pm SecInfo FilesMan Console Sql Php StringTools Bruteforce Network Logout SelfRemove FilesTools" "chain"
                SecRule ARGS_POST_NAMES "^c$" \
                    "setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"

# skins.php shell seen used in shoplift attacks..
# Very short shell, just uses the following code:
# <?php if(@$_COOKIE[qz]) ($_=@$_REQUEST[q]).@$_($_REQUEST[z]); ?>
SecRule REQUEST_BODY_LENGTH "@gt 0" \
    "msg:'Attemped use of php shell',\
    severity:CRITICAL,\
    phase:request,\
    id:4044005,\
    t:none,\
    auditlog,\
    chain"
        SecRule REQUEST_HEADERS:Cookie "\bqz=" "chain"
            SecRule ARGS_POST_NAMES "^q$" "chain"
                SecRule ARGS_POST_NAMES "^z$" \
                    "setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"

#
# b374k shell - https://code.google.com/p/b374k-shell/
#
# Block logins to b374k shell
SecRule ARGS_POST_NAMES "login" \
    "msg:'Attemped login to b374k shell',\
    severity:CRITICAL,\
    phase:request,\
    id:4044006,\
    t:none,\
    auditlog,\
    chain"
        SecRule ARGS_POST:submitlogin "Go !" "chain"
            SecRule &ARGS_POST "2" \
                "setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"
# Block requests with the b374k shell cookie enabled
SecRule REQUEST_HEADERS:Cookie "b374k=|b374k_included=\d" \
    "msg:'Attempted use of b374k backdoor',\
    severity:CRITICAL,\
    phase:request,\
    id:4044007,\
    t:none,\
    auditlog,\
    setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"

# If attempting Magento Backend login, create variables containing hashed username and password.
SecRule REQUEST_URI "!/index.php" \
    "phase:request,\
    id:4044008,\
    t:none,\
    nolog,\
    skipAfter:END_MAGENTO_BACKEND_CREDENTIAL_HASHING"

SecRule ARGS_POST:login[username] ".*" \
    "phase:request,\
    id:4044009,\
    t:none,\
    t:md5,t:hexEncode,\
    nolog,\
    setvar:tx.mage_backend_user_hash=%{MATCHED_VAR}"
    
SecRule ARGS_POST:login[password] ".*" \
    "phase:request,\
    id:4044010,\
    t:none,\
    t:md5,t:hexEncode,\
    nolog,\
    setvar:tx.mage_backend_pass_hash=%{MATCHED_VAR}"

SecMarker END_MAGENTO_BACKEND_CREDENTIAL_HASHING

# If attempting Magento Downloader login, create variables containing hashed username and password.
SecRule REQUEST_URI "!/downloader/" \
    "phase:request,\
    id:4044011,\
    t:none,\
    nolog,\
    skipAfter:END_MAGENTO_DOWNLOADER_CREDENTIAL_HASHING"

SecRule ARGS_POST:username ".*" \
    "phase:request,\
    id:4044012,\
    t:none,\
    t:md5,t:hexEncode,\
    nolog,\
    setvar:tx.mage_downloader_user_hash=%{MATCHED_VAR}"
    
SecRule ARGS_POST:password ".*" \
    "phase:request,\
    id:4044013,\
    t:none,\
    t:md5,t:hexEncode,\
    nolog,\
    setvar:tx.mage_downloader_pass_hash=%{MATCHED_VAR}"

SecMarker END_MAGENTO_DOWNLOADER_CREDENTIAL_HASHING

# Block system.multicall method in xmlrpc
# This method allows multiple login attempts in a single request
SecRule REQUEST_METHOD "^POST$" \
    "msg:'system.multicall method used in xmlrpc',\
    severity:CRITICAL,\
    phase:request,\
    id:4044014,\
    t:none,\
    t:urldecode,\
    auditlog,\
    chain"
        SecRule REQUEST_URI "/xmlrpc.php" "chain"
            SecRule STREAM_INPUT_BODY "system\.multicall" \
                "setvar:tx.nexcess_blacklist_score=+%{tx.critical_anomaly_score}"
